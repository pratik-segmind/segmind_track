# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [ push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install Protocol Buffer Compiler(Protoc)
        run: |
          PROTOC_ZIP=protoc-3.7.1-linux-x86_64.zip
          sudo curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.7.1/$PROTOC_ZIP
          sudo unzip -o $PROTOC_ZIP -d /usr/local bin/protoc
          sudo unzip -o $PROTOC_ZIP -d /usr/local 'include/*'

      # Generate *pb2.py files from *.proto
      - name: Generate protos
        run: |
          chmod +x ./generate-protos.sh
          ./generate-protos.sh

      - name: installing build requirements
        run: pip3 install setuptools wheel

      # Runs a set of commands using the runners shell
      - name: building wheel
        run: python3 setup.py bdist_wheel

      - name: Uploading wheel Build Artifact
        uses: actions/upload-artifact@v2.1.4
        with:
          # Artifact name
          name: segmind_track-build
          # A file, directory or wildcard pattern that describes what to upload
          path: dist
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error

  test:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2

      #- name: Display structure of downloaded files
      #  run: ls -R

      - name: installing build requirements
        run: |
          pip3 install -U pip
          pip3 install setuptools wheel

      - name: 'Install requirements'
        run: pip3 install -r requirements.txt

      - name: Installing build
        run: pip3 install ./segmind_track-build/segmind_track*.whl

      - name: Configure segmind-track
        env:
          USERNAME: ${{ secrets.TRACK_USERNAME }}
          PASSWORD: ${{ secrets.TRACK_PASSWORD }}
        run: |
          mkdir ~/.segmind
          echo -e "[secret]\nemail=$USERNAME\npassword=$PASSWORD" > ~/.segmind/secret.file

      - name: Run unittests
        env:
          TRACK_EXPERIMENT_ID: ${{ secrets.TRACK_EXPERIMENT_ID}}
        run: python3 -m unittest discover test
